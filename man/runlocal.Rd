% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/runlocal.R
\name{runlocal}
\alias{runlocal}
\title{Perform 1-bit local search around a selected GA model}
\usage{
runlocal(
  dat,
  ga.iter = 1,
  search.space = "ivbase",
  sel.best.code = NULL,
  sig.diff = 1,
  param_table = NULL,
  penalty.control = penaltyControl(),
  precomputed_results_file = NULL,
  filename,
  bit.names = NULL,
  ...
)
}
\arguments{
\item{dat}{Data frame of observations (columns as required by \pkg{nlmixr2}/\pkg{rxode2},
e.g., \code{ID}, \code{TIME}, \code{DV}, dosing records with \code{EVID}, etc.).}

\item{ga.iter}{Integer. GA iteration number (passed through to \code{mod.run}).}

\item{search.space}{Character. Either \code{"ivbase"} (intravenous) or \code{"oralbase"} (oral).
Determines how the binary code is parsed into a categorical model structure.}

\item{sel.best.code}{Numeric/integer vector of 0/1 values representing the selected
model's binary encoding. Must be the same length as \code{bit.names}.}

\item{sig.diff}{Numeric. Minimum significant difference in fitness for ranking.
Passed to \code{rank_new()}.}

\item{param_table}{Data frame of initial parameter estimates. If \code{NULL},
it will be generated by \code{\link{auto_param_table}()}.}

\item{penalty.control}{List created by \code{\link{penaltyControl}()} defining penalties
for model evaluation.}

\item{precomputed_results_file}{Character or \code{NULL}. Path to a CSV file of previously
computed results for cache lookup.}

\item{filename}{Character. Base name (without \code{.csv}) to which results will be appended.}

\item{bit.names}{Character vector of bit names in the correct order for the binary encoding.
This is used to detect and handle linked bits (e.g., \code{no.cmpt1}/\code{no.cmpt2}).}

\item{...}{Additional arguments passed to \code{\link{mod.run}()}.}
}
\value{
A data frame of candidate models with their binary/categorical encodings, computed fitness,
and rank.
}
\description{
Performs a local search in the model space by flipping each bit
in the selected model code (binary vector) one at a time and evaluating the
resulting candidate models. Special handling is applied for bits representing
linked binary encodings (e.g., \code{no.cmpt1}/\code{no.cmpt2} and \code{rv1}/\code{rv2}).
}
\details{
For each bit in \code{sel.best.code}, the function flips its value and evaluates the new
model. If the bit corresponds to the second element of a linked pair (e.g., \code{no.cmpt2} or
\code{rv2}), the linked first bit is set to 1 and the second to 0 to maintain valid encoding.
All candidate models are validated via \code{\link{validateModels}()} before evaluation.

Fitness for each candidate is computed by calling \code{\link{mod.run}()} and ranked
using \code{\link{rank_new}()}.
}
\examples{
\dontrun{
# Define bit names for ivbase (12 bits)
bit.names <- c(
  "no.cmpt1", "no.cmpt2",
  "eta.km", "eta.vc", "eta.vp", "eta.vp2", "eta.q", "eta.q2",
  "mm", "mcorr", "rv1", "rv2"
)

# Example best model binary code
sel.best.code <- c(1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0)

# Load example dataset
dat <- pheno_sd

# Generate parameter table
param_table <- auto_param_table(dat = dat, nlmixr2autoinits = TRUE)

# Run local search
res_local <- runlocal(
  dat                      = dat,
  ga.iter                  = 1,
  search.space             = "ivbase",
  sel.best.code            = sel.best.code,
  sig.diff                 = 1,
  param_table              = param_table,
  penalty.control          = penaltyControl(),
  filename                 = "local_search_results",
  bit.names                = bit.names
)

print(res_local)
}
}
\seealso{
\code{\link{mod.run}}, \code{\link{validateModels}}, \code{\link{auto_param_table}}
}
