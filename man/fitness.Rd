% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitness.R
\name{fitness}
\alias{fitness}
\title{Evaluate fitness of a population pharmacokinetic model}
\usage{
fitness(
  search.space,
  fit.results,
  string,
  crse,
  cshrink,
  lbcl,
  lbvc,
  lbvp,
  lbq,
  lbvp2,
  lbq2,
  cadd,
  cprop,
  ccorr,
  penalty.type,
  penalty.value
)
}
\arguments{
\item{search.space}{An integer indicating the search space.}

\item{fit.results}{A data frame containing the results of the model fitting, obtained from \code{get.mod.lst}.}

\item{string}{A binary string representing the model.}

\item{crse}{Constraint value for the relative standard error (RSE).}

\item{cshrink}{Constraint value for the shrinkage.}

\item{lbcl}{Lower bound for the clearance parameter.}

\item{lbvc}{Lower bound for the central volume of distribution parameter.}

\item{lbvp}{Lower bound for the peripheral volume of distribution parameter.}

\item{lbq}{Lower bound for the intercompartmental clearance parameter.}

\item{lbvp2}{Lower bound for the second peripheral volume of distribution parameter.}

\item{lbq2}{Lower bound for the second intercompartmental clearance parameter.}

\item{cadd}{Constraint value for the additive error.}

\item{cprop}{Constraint value for the proportional error.}

\item{ccorr}{Constraint value for the correlation between parameters.}

\item{penalty.type}{The type of penalty to apply during the fitness evaluation:
\itemize{
\item \code{penalty.type = 1}: Considers constraints on RSE.
\item \code{penalty.type = 2}: Considers constraints on RSE and shrinkage.
\item \code{penalty.type = 3}: Considers constraints on RSE, shrinkage, and sigma values (variance of residual error).
}
All types also consider whether the model covariance step was successful.}

\item{penalty.value}{The value of the penalty to apply during the fitness evaluation.}
}
\value{
A data frame with updated fitness values and constraints flags.
}
\description{
Evaluate the fitness of model performance based on various constraints and penalty criteria.
}
\examples{
\dontrun{
# Define the model
pheno <- function() {
  ini({
    tcl <- log(0.008) # typical value of clearance
    tv <-  log(0.6)   # typical value of volume
    eta.cl + eta.v ~ c(1,
                       0.01, 1)
    add.err <- 0.1    # residual variability
  })
  model({
    cl <- exp(tcl + eta.cl) # individual value of clearance
    v <- exp(tv + eta.v)    # individual value of volume
    ke <- cl / v            # elimination rate constant
    d/dt(A1) = - ke * A1    # model differential equation
    cp = A1 / v             # concentration in plasma
    cp ~ add(add.err)       # define error model
  })
}
fit <- nlmixr(pheno, pheno_sd, "saem",control=list(print=0),
table=list(cwres=TRUE, npde=TRUE))

# Fit the model using nlmixr2
fit.results <- get.mod.lst(fit,1)
string <- c(0, 0, 0, 1, 0, 0, 0, 0, 1, 1)
search.space<-1
crse <- 20
cshrink <- 20
lbcl <- 0.1
lbvc <- 0.1
lbvp <- 0.1
lbq <- 0.1
lbvp2 <- 0.1
lbq2 <- 0.1
cadd <- 0.1
cprop <- 0.1
ccorr <- 0.1
penalty.type <- 3
penalty.value <- 10000
fitness_results <- aco.fitness(search.space,fit.results, string, crse, cshrink, lbcl, lbvc, lbvp, lbq, lbvp2, lbq2, cadd, cprop, ccorr, penalty.type, penalty.value)
print(fitness_results)
}
}
