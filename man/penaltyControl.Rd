% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitness.R
\name{penaltyControl}
\alias{penaltyControl}
\title{Define penalty control settings for model fitness evaluation}
\usage{
penaltyControl(
  penalty.value = 10000,
  step.penalties = list(rse = c(10, 10000), shrinkage = c(10, 10000), bsv = c(10, 10000),
    sigma = list(add = c(10, 10000), prop = c(10, 10000)), correlation = c(10, 10000)),
  bounds = param.bounds(),
  thresholds = list(),
  penalty.terms = c("total")
)
}
\arguments{
\item{penalty.value}{Numeric. Default penalty applied for binary violations
and bound constraints.}

\item{step.penalties}{Numeric vector of length 2. Penalties for mild and
severe violations in step-based methods
(e.g., \code{c(mild = 10, severe = 10000)}).}

\item{bounds}{A list of parameter bounds defined by \code{\link[=param.bounds]{param.bounds()}}
(includes theta, omega, sigma, correlation).}

\item{thresholds}{A named list of threshold control for RSE and shrinkage.
Each element should contain a \code{method} ("binary" or "step"), and:
\itemize{
\item For "binary": \code{threshold} (single value)
\item For "step": \code{step.levels} (e.g., \code{c(30, 50)})
}}

\item{penalty.terms}{Character vector of constraint types to penalize.
Valid terms: "rse", "shrinkage", "theta", "omega", "sigma",
"correlation", "covariance", "total".}
}
\value{
A list containing penalty configuration for use in the \code{\link[=fitness]{fitness()}}
function.
}
\description{
This function sets up penalty rules used in evaluating model quality based on
bounds (e.g., parameter lower/upper limits) and threshold-based metrics such as
RSE and shrinkage. Supports both binary and step penalty schemes.
}
\examples{
# Use all defaults
penaltyControl()

# Override only theta bounds
penaltyControl(bounds = param.bounds(
  theta = list(lower = list(cl = 0.01, vc = 0.01))
))

# Use binary method for RSE with a custom threshold
penaltyControl(thresholds = list(
  rse = list(method = "binary", threshold = 40)
))

}
\seealso{
\code{\link[=param.bounds]{param.bounds()}}
}
