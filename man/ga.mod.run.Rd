% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ga.mod.run.R
\name{ga.mod.run}
\alias{ga.mod.run}
\title{Run and evaluate a model (GA)}
\usage{
ga.mod.run(
  modi,
  r,
  dat,
  search.space,
  string,
  crse,
  cshrink,
  lbcl,
  lbvc,
  lbvp,
  lbq,
  lbvp2,
  lbq2,
  cadd,
  cprop,
  ccorr,
  penalty.type,
  penalty.value,
  ...
)
}
\arguments{
\item{modi}{The current model number.}

\item{r}{An integer representing the current round number.}

\item{dat}{A data frame containing the data to be used for model fitting.}

\item{search.space}{An integer indicating the search space.}

\item{string}{A binary string representing the genetic algorithm's chromosome.}

\item{crse}{Constraint value for the relative standard error (RSE).}

\item{cshrink}{Constraint value for the shrinkage.}

\item{lbcl}{Lower bound for the clearance parameter.}

\item{lbvc}{Lower bound for the central volume of distribution parameter.}

\item{lbvp}{Lower bound for the peripheral volume of distribution parameter.}

\item{lbq}{Lower bound for the intercompartmental clearance parameter.}

\item{lbvp2}{Lower bound for the second peripheral volume of distribution parameter.}

\item{lbq2}{Lower bound for the second intercompartmental clearance parameter.}

\item{cadd}{Constraint value for the additive error.}

\item{cprop}{Constraint value for the proportional error.}

\item{ccorr}{Constraint value for the correlation between parameters.}

\item{penalty.type}{The type of penalty to apply during the fitness evaluation:
\itemize{
\item \code{penalty.type = 1}: Considers constraints on RSE.
\item \code{penalty.type = 2}: Considers constraints on RSE and shrinkage.
\item \code{penalty.type = 3}: Considers constraints on RSE, shrinkage, and sigma values (variance of residual error).
}
All types also consider whether the model covariance step was successful.}

\item{penalty.value}{The value of the penalty to apply during the fitness evaluation.}

\item{...}{Additional arguments to be passed to the \code{nlmixr2} function.}
}
\value{
A numeric value representing the fitness of the model.
}
\description{
Conduct a model run and evaluate its fitness within the context of a genetic algorithm.
Converts binary strings to model parameters, fits the model using \code{nlmixr2},
and evaluates the model's performance based on \code{ga.fitness}.
}
\examples{
\dontrun{
dat <- pheno_sd
inits.out<-getppkinit(dat = dat)
autosetinit(dat = dat,
           inits= inits.out$Recommended_initial_estimates)
string <- c(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0)
fitness <- ga.mod.run(modi=1, r = 1, dat = dat, search.space = 1, string = string,
                      crse = 20, cshrink = 30, lbcl = 1, lbvc = 1, lbvp = 1,
                      lbq = 0.01, lbvp2 = 1, lbq2 = 0.01, cadd = 0.1, cprop = 0.01,
                      ccorr = 0.2, penalty.type = 3, penalty.value = 10000,control = saemControl(logLik = T))
}

}
