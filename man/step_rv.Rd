% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sf.operator.R
\name{step_rv}
\alias{step_rv}
\title{Screen residual error model (rv)}
\usage{
step_rv(
  dat,
  state = list(),
  search.space = "ivbase",
  param_table = NULL,
  penalty.control = NULL,
  precomputed_results_file = NULL,
  filename = NULL,
  ...
)
}
\arguments{
\item{dat}{Data frame passed to \code{mod.run()}.}

\item{state}{List with optional \code{best_code} (named integer vector) and \code{modi}.}

\item{search.space}{Character scalar: \code{"ivbase"} or \code{"oralbase"}.}

\item{param_table}{Parameter table passed to \code{mod.run()}.}

\item{penalty.control}{Optional penalty control passed to \code{mod.run()}.}

\item{...}{Forwarded to \code{mod.run()} (e.g., \code{filename}, controls, \code{custom_base}).}
}
\value{
List with:
\itemize{
\item \code{results_table}: data.frame (Step, Model name, Model code, Fitness)
\item \code{best_code}: named integer vector of the best candidate
\item \code{best_row}: one-row data.frame (the best candidate)
}
}
\description{
Uses the current model as baseline and, if \code{rv == 3}, also evaluates
\code{rv = 1} and \code{rv = 2} while keeping all other fields fixed.
Chooses the candidate with the lowest Fitness.
}
\examples{
\dontrun{
state <- list(best_code = base_model("ivbase"), modi = 1L)
res_rv <- step_rv(
  dat = dat,
  state = state,
  search.space = "ivbase",
  param_table = param_table,
  penalty.control = penaltyControl()
)
res_rv$results_table
res_rv$best_code
}

}
