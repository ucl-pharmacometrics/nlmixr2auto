% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aco.cores.R
\name{phi.calculate}
\alias{phi.calculate}
\title{Calculate pheromone update for ants}
\usage{
phi.calculate(
  r,
  search.space,
  input.ants.dat,
  all.lib.dat,
  node.list.0,
  node.list.all,
  alpha.value,
  rho,
  sig.diff,
  lower.limit.phi,
  upper.limit.phi
)
}
\arguments{
\item{r}{An integer representing the current iteration or travel.}

\item{search.space}{An integer specifying the search space type (1 for standard).}

\item{input.ants.dat}{A data frame containing the data of the input ants.}

\item{all.lib.dat}{A data frame containing the library data with fitness values.}

\item{node.list.0}{A template data frame containing the all node pheromone information.}

\item{node.list.all}{A data frame containing the all node pheromone information.}

\item{alpha.value}{A numeric value for the alpha parameter in the pheromone calculation.}

\item{rho}{A numeric value for the evaporation rate of pheromone.}

\item{sig.diff}{A numeric value used in the ranking calculation.}

\item{lower.limit.phi}{A numeric value specifying the lower limit for the pheromone level.}

\item{upper.limit.phi}{A numeric value specifying the upper limit for the pheromone level.}
}
\value{
Data frame. The updated node list with new pheromone values.
}
\description{
Calculate the updated pheromone values for each node based on the results of the current iteration and the pheromone evaporation rate.
}
\examples{
\dontrun{
r <- 1
search.space <- 1
no.ants <- 10
node.list.0 <- data.frame()  # Define node.list.0 as per your application needs
input.ants.dat <- create.ant(search.space = search.space,
                             no.ants = no.ants,
                             initialize = TRUE,
                             node.list = node.list.0)

all.lib.dat <- data.frame(fitness = runif(10)) # Example library data
no.nodes <- 22
initial.phi <- 1
node.list.all <- data.frame(
  travel = 0,
  node.no = seq(1, no.nodes, 1),
  local.node.no = c(seq(1, 3, 1), seq(0, 1, 1), seq(0, 1, 1), seq(0, 1, 1), seq(0, 1, 1),
                    seq(0, 1, 1), seq(0, 1, 1), seq(0, 1, 1), seq(0, 1, 1), seq(1, 3, 1)),
  node.names = c("1Cmpt", "2Cmpt", "3Cmpt", "eta.vp2.no", "eta.vp2.yes", "eta.q2.no", "eta.q2.yes",
                 "eta.vp.no", "eta.vp.yes", "eta.q.no", "eta.q.yes", "eta.vc.no", "eta.vc.yes",
                 "mm.no", "mm.yes", "eta.km.no", "eta.km.yes", "mcorr.no", "mcorr.yes",
                 "add", "prop", "comb"),
  node.group = c(rep(1, 3), sort(rep(seq(2, 9, 1), 2)), rep(10, 3)),
  phi = rep(initial.phi, no.nodes),
  delta_phi = rep(0, no.nodes),
  p = c(rep(round(1 / 3, 3), 3), rep(0.5, 16), rep(round(1 / 3, 3), 3))
)
node.list.0=node.list.all
alpha.value <- 1
rho <- 0.2
sig.diff <- 0.1
lower.limit.phi <- 1
upper.limit.phi <- 10

node.list <- phi.calculate(r, search.space, input.ants.dat, all.lib.dat,
node.list.all, alpha.value, rho, sig.diff, lower.limit.phi, upper.limit.phi)
}

}
