% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aco.cores.R
\name{phi.calculate}
\alias{phi.calculate}
\title{Update pheromone levels for each decision node}
\usage{
phi.calculate(
  r,
  search.space = "ivbase",
  fitness_history = NULL,
  node.list.history = NULL,
  param.Q = 1,
  alpha.value = 1,
  rho = 0.2,
  sig.diff = 1,
  lower.limit.phi = 1,
  upper.limit.phi = Inf
)
}
\arguments{
\item{r}{Integer. The current optimization round.}

\item{search.space}{Character. Either \code{"ivbase"} or \code{"oralbase"}, determines
which decision variables and node groups are used.}

\item{fitness_history}{Data frame. History of all ants' fitness values and decision
variable selections across rounds.}

\item{node.list.history}{Data frame. History of node-level pheromone values
across previous rounds.}

\item{alpha.value}{Numeric. Exponent used when converting ranks to pheromone
contributions: \eqn{\Delta\phi \propto 1/\text{rank}^\alpha}.}

\item{rho}{Numeric. Pheromone evaporation rate (fraction evaporated per iteration).}

\item{sig.diff}{Numeric. Significance threshold for distinguishing fitness ranks.}

\item{lower.limit.phi}{Numeric. Lower bound on updated \eqn{\phi}.}

\item{upper.limit.phi}{Numeric. Upper bound on updated \eqn{\phi}.}
}
\value{
A data frame (node list) with updated \code{phi} and \code{delta_phi} for each node.
}
\description{
Computes the pheromone increment (\eqn{\Delta \phi}) for each node
in the ant colony optimization (ACO) search tree, and updates the global pheromone
levels (\eqn{\phi}) based on the ants' paths in a given round.
}
\details{
Steps performed:
\enumerate{
\item \strong{Initialize node list} for the given search space with \eqn{\phi = 0}.
\item \strong{Subset ants of current round} from \code{fitness_history}.
\item \strong{Compute rank-based \eqn{\Delta\phi} weights}: ants with higher fitness
receive larger contributions, scaled by \code{alpha.value}.
\item \strong{Extract decision columns} (variables controlling path choices) and append
the computed \eqn{\phi} values as a new column in \code{phi.dat}.
\item \strong{Map local decision indices to global node numbers} using \code{node.group} and
\code{local.node.no} from \code{node.list}.
\itemize{
\item For example, in \code{"ivbase"}, \code{"eta.km"} maps to group 8; in \code{"oralbase"}, \code{"eta.ka"}
is included as group 7.
}
\item \strong{For each node}:
\itemize{
\item Identify ants that chose this node (\code{chosen_mask}).
\item Sum their \eqn{\phi} values to get \code{delta_phi}.
\item Update global \eqn{\phi} with evaporation:
\deqn{\phi_{\text{new}} = (1-\rho) \cdot \phi_{\text{prev, recent}} + \Delta\phi}
\item Clip \eqn{\phi} to \verb{[lower.limit.phi, upper.limit.phi]}.
}
}

This update rule maintains both exploration (through evaporation) and exploitation
(reinforcing paths chosen by better-performing ants).
}
\examples{
# Define search space
search.space <- "ivbase"
initial.phi <- 0

# Example fitness_history from round 1
fitness_history <- data.frame(
  round   = rep(1, 8),
  mod.no  = 1:8,
  no.cmpt = c(1, 1, 2, 2, 3, 3, 2, 2),
  eta.km  = c(0, 0, 0, 0, 0, 0, 0, 0),
  eta.vc  = c(0, 0, 0, 0, 0, 0, 1, 1),
  eta.vp  = c(0, 0, 0, 0, 0, 0, 0, 1),
  eta.vp2 = c(0, 0, 0, 0, 0, 0, 0, 0),
  eta.q   = c(0, 0, 0, 0, 0, 0, 0, 0),
  eta.q2  = c(0, 0, 0, 0, 0, 0, 0, 0),
  mm      = c(0, 0, 0, 0, 0, 0, 1, 0),
  mcorr   = c(0, 0, 0, 0, 0, 0, 0, 0),
  rv      = c(1, 2, 1, 2, 1, 2, 1, 1),
  fitness = c(1243.874, 1200.762, 31249.876, 31202.200,
              51259.286, 51204.839, 61032.572, 41031.825),
  allrank = c(2, 1, 4, 3, 7, 6, 8, 5)
)

# Example node list history
node.list.history <- initNodeList(
  search.space = search.space,
  initial.phi = initial.phi
)

# Call phi.calculate
updated_nodes <- phi.calculate(
  r = 1,
  search.space = search.space,
  fitness_history = fitness_history,
  node.list.history = node.list.history,
  alpha.value = 1,
  rho = 0.2,
  sig.diff = 1,
  lower.limit.phi = 1,
  upper.limit.phi = Inf
)
print(updated_nodes )

}
\seealso{
\code{\link{initNodeList}}, \code{\link{rank_new}}
}
